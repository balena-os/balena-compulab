From c89367ffd411f7717b13f6da849ce4181e69af58 Mon Sep 17 00:00:00 2001
From: Robert Chiras <robert.chiras@nxp.com>
Date: Wed, 29 May 2019 16:53:03 +0300
Subject: [PATCH 5/7] gpu/imx: dcss: Update clocks

Replace the pdiv_clk and pout_clk with pix_clk, since one of them was
obsolette.
Take care of pll_src and pll_phy_ref clocks only when the output is the
HDMI connector (these are not needed by the DSI).

Signed-off-by: Robert Chiras <robert.chiras@nxp.com>
---
 drivers/gpu/imx/dcss/dcss-common.c | 47 +++++++++++++++++++++++---------------
 drivers/gpu/imx/dcss/dcss-dtg.c    | 30 ++++++++++--------------
 drivers/gpu/imx/dcss/dcss-prv.h    |  4 ++--
 3 files changed, 42 insertions(+), 39 deletions(-)

diff --git a/drivers/gpu/imx/dcss/dcss-common.c b/drivers/gpu/imx/dcss/dcss-common.c
index 639cc91..5d97a9e 100644
--- a/drivers/gpu/imx/dcss/dcss-common.c
+++ b/drivers/gpu/imx/dcss/dcss-common.c
@@ -271,27 +271,28 @@ static int dcss_clks_init(struct dcss_soc *dcss)
 	struct {
 		const char *id;
 		struct clk **clk;
+		bool required;
 	} clks[] = {
-		{"apb",   &dcss->apb_clk},
-		{"axi",   &dcss->axi_clk},
-		{"pix_div", &dcss->pdiv_clk},
-		{"pix_out", &dcss->pout_clk},
-		{"rtrm",  &dcss->rtrm_clk},
-		{"dtrc",  &dcss->dtrc_clk},
-		{"pll_src",  &dcss->pll_src_clk},
-		{"pll_phy_ref",  &dcss->pll_phy_ref_clk},
+		{"apb",   &dcss->apb_clk, true},
+		{"axi",   &dcss->axi_clk, true},
+		{"pix",   &dcss->pix_clk, true},
+		{"rtrm",  &dcss->rtrm_clk, true},
+		{"dtrc",  &dcss->dtrc_clk, true},
+		{"pll_src",  &dcss->pll_src_clk, dcss->hdmi_output},
+		{"pll_phy_ref",  &dcss->pll_phy_ref_clk, dcss->hdmi_output},
 	};
 
 	for (i = 0; i < ARRAY_SIZE(clks); i++) {
 		*clks[i].clk = devm_clk_get(dcss->dev, clks[i].id);
-		if (IS_ERR(*clks[i].clk)) {
+		if (IS_ERR(*clks[i].clk) && clks[i].required) {
 			dev_err(dcss->dev, "failed to get %s clock\n",
 				clks[i].id);
 			ret = PTR_ERR(*clks[i].clk);
 			goto err;
 		}
 
-		clk_prepare_enable(*clks[i].clk);
+		if (clks[i].required)
+			clk_prepare_enable(*clks[i].clk);
 	}
 
 	dcss->clks_on = true;
@@ -308,25 +309,27 @@ static int dcss_clks_init(struct dcss_soc *dcss)
 static void dcss_clocks_enable(struct dcss_soc *dcss, bool en)
 {
 	if (en && !dcss->clks_on) {
-		clk_prepare_enable(dcss->pll_phy_ref_clk);
-		clk_prepare_enable(dcss->pll_src_clk);
+		if (dcss->hdmi_output) {
+			clk_prepare_enable(dcss->pll_phy_ref_clk);
+			clk_prepare_enable(dcss->pll_src_clk);
+		}
 		clk_prepare_enable(dcss->axi_clk);
 		clk_prepare_enable(dcss->apb_clk);
 		clk_prepare_enable(dcss->rtrm_clk);
 		clk_prepare_enable(dcss->dtrc_clk);
-		clk_prepare_enable(dcss->pdiv_clk);
-		clk_prepare_enable(dcss->pout_clk);
+		clk_prepare_enable(dcss->pix_clk);
 	}
 
 	if (!en && dcss->clks_on) {
-		clk_disable_unprepare(dcss->pout_clk);
-		clk_disable_unprepare(dcss->pdiv_clk);
+		clk_disable_unprepare(dcss->pix_clk);
 		clk_disable_unprepare(dcss->dtrc_clk);
 		clk_disable_unprepare(dcss->rtrm_clk);
 		clk_disable_unprepare(dcss->apb_clk);
 		clk_disable_unprepare(dcss->axi_clk);
-		clk_disable_unprepare(dcss->pll_src_clk);
-		clk_disable_unprepare(dcss->pll_phy_ref_clk);
+		if (dcss->hdmi_output) {
+			clk_disable_unprepare(dcss->pll_src_clk);
+			clk_disable_unprepare(dcss->pll_phy_ref_clk);
+		}
 	}
 
 	dcss->clks_on = en;
@@ -566,10 +569,12 @@ static void dcss_bus_freq(struct dcss_soc *dcss, bool en)
 
 static int dcss_probe(struct platform_device *pdev)
 {
-	int ret;
+	int ret, len;
 	struct resource *res;
 	struct dcss_soc *dcss;
 	const struct dcss_devtype *devtype;
+	struct device_node *node = pdev->dev.of_node;
+	const char *disp_dev;
 
 	devtype = of_device_get_match_data(&pdev->dev);
 	if (!devtype) {
@@ -592,6 +597,10 @@ static int dcss_probe(struct platform_device *pdev)
 
 	platform_set_drvdata(pdev, dcss);
 
+	disp_dev = of_get_property(node, "disp-dev", &len);
+	if (!disp_dev || !strncmp(disp_dev, "hdmi_disp", 9))
+		dcss->hdmi_output = true;
+
 	ret = dcss_clks_init(dcss);
 	if (ret) {
 		dev_err(&pdev->dev, "clocks initialization failed\n");
diff --git a/drivers/gpu/imx/dcss/dcss-dtg.c b/drivers/gpu/imx/dcss/dcss-dtg.c
index d41124a..40a041c 100644
--- a/drivers/gpu/imx/dcss/dcss-dtg.c
+++ b/drivers/gpu/imx/dcss/dcss-dtg.c
@@ -299,32 +299,26 @@ void dcss_dtg_sync_set(struct dcss_soc *dcss, struct videomode *vm)
 	dis_lrc_y = vm->vsync_len + vm->vfront_porch + vm->vback_porch +
 		    vm->vactive - 1;
 
+	clk_disable_unprepare(dcss->pix_clk);
 	if (dtg->hdmi_output) {
 		int err;
-		clk_disable_unprepare(dcss->pout_clk);
 		clk_disable_unprepare(dcss->pll_src_clk);
 		err = clk_set_parent(dcss->pll_src_clk, dcss->pll_phy_ref_clk);
 		if (err < 0)
 			dev_warn(dcss->dev, "clk_set_parent() returned %d",
 				 err);
-		clk_set_rate(dcss->pout_clk, vm->pixelclock);
 		clk_prepare_enable(dcss->pll_src_clk);
-		clk_prepare_enable(dcss->pout_clk);
-	} else {
-		clk_disable_unprepare(dcss->pout_clk);
-		clk_disable_unprepare(dcss->pdiv_clk);
-		clk_set_rate(dcss->pdiv_clk, vm->pixelclock);
-		actual_clk = clk_get_rate(dcss->pdiv_clk);
-		clk_prepare_enable(dcss->pdiv_clk);
-		clk_prepare_enable(dcss->pout_clk);
-		actual_clk = clk_get_rate(dcss->pdiv_clk);
-		if (vm->pixelclock != actual_clk) {
-			dev_info(dcss->dev,
-				"Pixel clock set to %u kHz instead of %lu kHz, "
-				"error is %d Hz\n",
-				(actual_clk / 1000), (vm->pixelclock / 1000),
-				(int)(actual_clk - vm->pixelclock));
-		}
+	}
+	clk_set_rate(dcss->pix_clk, vm->pixelclock);
+	clk_prepare_enable(dcss->pix_clk);
+
+	actual_clk = clk_get_rate(dcss->pix_clk);
+	if (vm->pixelclock != actual_clk) {
+		dev_dbg(dcss->dev,
+			"Pixel clock set to %u kHz instead of %lu kHz, "
+			"error is %d Hz\n",
+			(actual_clk / 1000), (vm->pixelclock / 1000),
+			(int)(actual_clk - vm->pixelclock));
 	}
 
 	msleep(50);
diff --git a/drivers/gpu/imx/dcss/dcss-prv.h b/drivers/gpu/imx/dcss/dcss-prv.h
index efab4b2..f098092 100644
--- a/drivers/gpu/imx/dcss/dcss-prv.h
+++ b/drivers/gpu/imx/dcss/dcss-prv.h
@@ -65,8 +65,7 @@ struct dcss_soc {
 
 	struct clk *apb_clk;
 	struct clk *axi_clk;
-	struct clk *pdiv_clk;
-	struct clk *pout_clk;
+	struct clk *pix_clk;
 	struct clk *rtrm_clk;
 	struct clk *dtrc_clk;
 	struct clk *pll_src_clk;
@@ -76,6 +75,7 @@ struct dcss_soc {
 
 	bool bus_freq_req;
 	bool clks_on;
+	bool hdmi_output;
 
 	struct pm_qos_request pm_qos_req;
 };
-- 
2.7.4

